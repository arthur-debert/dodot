                   Understanding Packs
                   ===================

Packs are the fundamental organizational unit in dodot. Each pack is a
directory containing related configuration files and setup scripts.

Pack Structure
--------------

A typical pack directory:

vim/
├── vimrc           # Main config file
├── colors/         # Supporting directories
├── install.sh      # One-time setup script
├── aliases.sh      # Shell aliases
├── Brewfile        # Homebrew dependencies
└── .dodot.toml     # Pack configuration

How Packs Work
--------------

1. Discovery
   dodot scans DOTFILES_ROOT for directories
   Each directory is treated as a potential pack

2. Configuration
   .dodot.toml defines triggers and matchers
   Default matchers apply if no config exists

3. Processing
   Files matching triggers are processed
   Power-ups generate appropriate actions

Creating Packs
--------------

# Initialize a new pack with templates
$ dodot init mypack

# Or create manually
$ mkdir mypack
$ echo "#!/bin/bash" > mypack/install.sh
$ dodot fill mypack  # Add missing files

Best Practices
--------------

• One concern per pack (vim, git, zsh)
• Keep install scripts idempotent
• Use subdirectories for organization
• Document pack purpose in readme.txt
• Test with --dry-run before deploying

Common Patterns
---------------

• Config pack: just dotfiles and symlinks
• Tool pack: install.sh + config files
• Shell pack: aliases, functions, PATH additions
• Language pack: version manager + global tools