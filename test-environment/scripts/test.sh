#!/bin/bash
# Test Phase - Run integration tests using ShellSpec
#
# This script runs the ShellSpec test suite for dodot integration testing

set -euo pipefail

echo "=== Test Phase: Running Integration Tests with ShellSpec ==="
echo

# Verify the container-built binary exists
DODOT="/usr/local/bin/dodot-container-linux"

if [ ! -x "$DODOT" ]; then
    echo "‚ùå ERROR: dodot-container-linux binary not found"
    echo "Did setup.sh run successfully?"
    exit 1
fi

echo "‚úÖ Found dodot binary at: $DODOT"
echo

# Create results directory for test output
mkdir -p /tmp/test-results/results

# Change to test environment directory where .shellspec is located
cd /test-environment

# Check if ShellSpec is installed
if ! command -v shellspec &> /dev/null; then
    echo "‚ùå ERROR: ShellSpec not found"
    echo "Make sure the Docker image was rebuilt with ShellSpec installed"
    exit 1
fi

echo "‚úÖ ShellSpec is installed"
echo

# Run ShellSpec tests with clean output
echo "Running ShellSpec test suite..."
echo "================================"

# Run tests and capture exit code - use formats from .shellspec config
set +e
shellspec > /tmp/test-results/test-output.log 2>&1
TEST_EXIT_CODE=${PIPESTATUS[0]}
set -e

# Show the actual test output (but truncate the verbose XML for readability)
echo "üìã Test Execution Results:"
echo "------------------------"
# Extract just the final summary from the output, not the full XML
tail -50 /tmp/test-results/test-output.log | head -30
echo "------------------------"

echo
echo "=== TEST SUMMARY ==="

# Parse test results from junit.xml format (generated by .shellspec config)
if [ -f "results/junit.xml" ]; then
    echo "üìà Test results generated in junit.xml format"
    
    # Extract basic stats if xmllint is available
    if command -v xmllint &> /dev/null; then
        TOTAL_TESTS=$(xmllint --xpath 'string(//testsuite/@tests)' results/junit.xml 2>/dev/null || echo "N/A")
        FAILURES=$(xmllint --xpath 'string(//testsuite/@failures)' results/junit.xml 2>/dev/null || echo "N/A")
        ERRORS=$(xmllint --xpath 'string(//testsuite/@errors)' results/junit.xml 2>/dev/null || echo "N/A")
        
        echo "  Total:    $TOTAL_TESTS"
        echo "  Failures: $FAILURES"
        echo "  Errors:   $ERRORS"
        
        # Show failed tests if any
        if [ "$FAILURES" != "0" ] && [ "$FAILURES" != "N/A" ]; then
            echo
            echo "‚ùå Some tests failed - check junit.xml for details"
        fi
    else
        echo "  (Install xmllint for detailed statistics)"
    fi
else
    echo "‚ö†Ô∏è  Could not find junit.xml results"
fi

# Exit with the test exit code
if [ $TEST_EXIT_CODE -eq 0 ]; then
    echo "‚úÖ All tests passed!"
else
    echo "‚ùå Some tests failed (exit code: $TEST_EXIT_CODE)"
fi

exit $TEST_EXIT_CODE