Docker Integration Testing Environment
======================================

This directory contains a Docker-based testing environment for dodot that allows
safe testing of file operations in an isolated Ubuntu environment.

Quick Start
-----------

1. Build the Docker image:
   $ docker build -t dodot-test .

2. Run interactive shell:
   $ docker run --rm -it -v $(pwd)/../bin/dodot:/usr/local/bin/dodot dodot-test

3. Inside container, test dodot:
   $ cd /dotfiles
   $ dodot list
   $ dodot deploy vim

Structure
---------

- Dockerfile: Ubuntu-based image with zsh and Homebrew
- scripts/: Setup and test automation scripts  
- sample-dotfiles/: Representative dotfiles for testing
- docker-compose.yml: Simplified container management

Testing Workflow
----------------

The testing follows this progression:
1. Basic functionality (list, deploy single pack)
2. Complex scenarios (multiple packs, conflicts)
3. Edge cases (permissions, missing files)
4. Automated regression tests

Future Enhancements
-------------------

- Support for bash and fish shells
- macOS testing via Lima/Colima
- GitHub Actions integration
- Matrix testing across Ubuntu versions
- Network-isolated testing
- Performance benchmarking
- Multi-user scenarios