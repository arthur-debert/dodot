                Commands in dodot

    dodot aims for simplicity, hence the only core command is deploy: 

      $ dodot deploy (deploys all packs in your DOTFILES_ROOT)
      $ dodot deploy <pack...> (deploy the selected packs only)

    There are a couple of auxiliary commands : 

      1. dodot fill <path>


This lists all the available power-ups
    $ dodot list
    Your dodot has the following power-ups: 
        alias (alias.sh) : <description>
        bin (bin/) : description

    $ dodot deploy

        The main command, will be ran on a list of pack(s) or all packs in the
        dotfiles_root

    $ dodot fill <pack>

        adds placeholder files for each power-ups (except for the link one) in
        the given pack(s)

        for example if a pack doesn't have a alias.sh, one will be added. this
            is useful for , after deployment, a symlink to the file will be
            done and edits to the files will be live.


    $ dodot init path
        
        creates a pack at given path. this will include: 
        - all files such as fill would create, 
        - a short and concise readme.txt explaining things
        - a .dodot.toml file that has the configuration in it's default form
          and is wellocnfiguration commented so it's easy to change anything.


      dodot status

       List which packs are deployed and current power-ups for each , like: 


       neovim: 
          - .dodot.toml:  custom configuration found
          - link: neovim/.vimrc -> ~/.vimrc
          - bin: neovim/bin added to your PATH
          - alias: neovim/alias.sh  in your shell
       python-dev: 
        ....
