Pack and File Display Design
============================

This document describes the design for displaying pack and file status information
in dodot's terminal output. This unified display format is used across multiple
commands including status, link, and provision.


General Display Format
----------------------

The standard format for displaying pack information follows this pattern:

    <pack-name>:
        <handler> : <file-path> : <status-message>

Each pack is displayed with its name followed by a colon, and each file within
the pack is indented with consistent spacing. The display uses a three-column
format separated by colons for clarity and alignment.


Status Types and Color Coding
-----------------------------

Files and packs can have the following status types:

1. SUCCESS (Green background, white text)
   - File has been linked/provisioned successfully
   - Shows past tense verbs with completion details

2. ERROR (Red background, white text)
   - Link/provision attempt has failed
   - Shows failure messages

3. QUEUE (Yellow background, black text)
   - File is pending linking/provisioning
   - Shows future tense verbs

4. ALERT (Red background, white text, bold) - Pack level only
   - Pack contains one or more files with errors
   - Applied to pack header when any file has error status

5. IGNORED (Gray/muted text)
   - Directory is explicitly ignored via .dodotignore

6. CONFIG (Cyan text)
   - Configuration file indicator


Pack Status Aggregation Rules
-----------------------------

Pack-level status is determined by aggregating file statuses:

- If ANY file has ERROR status → Pack status is ALERT
- If ALL files have SUCCESS status → Pack status is SUCCESS  
- If ALL files have QUEUE status → Pack status is QUEUE
- Mixed SUCCESS and QUEUE → Pack status is QUEUE (conservative default)
- Empty pack (no files) → Pack status is QUEUE


Special Cases
-------------

1. Ignored Directories (.dodotignore)
   
   When a directory contains a .dodotignore file:
   
       dirname:
           .dodotignore : dodot is ignoring this dir
   
   No further processing occurs for ignored directories.

2. Configuration Files (.dodot.toml)
   
   Configuration files are explicitly shown in pack listings:
   
       packname:
           config : .dodot.toml : dodot config file found

3. Overridden Files
   
   Files whose names are overridden in .dodot.toml are marked with asterisk:
   
       packname:
           install : *runme.sh : to be executed


Handler Verb Forms
-------------------

Each handler type has associated past and future tense verbs to indicate
status appropriately:

SYMLINK
- Past: "linked to"
- Future: "will be linked to"
- Example: ".vimrc : linked to $HOME/.vimrc"

shell  
- Past: "included in"
- Future: "to be included in"
- Example: "alias.sh : included in zsh"

HOMEBREW
- Past: "executed on"
- Future: "to be installed"
- Example: "Brewfile : executed on 2024-01-15"

PATH
- Past: "added to"
- Future: "to be added to"
- Example: "bin : added to $PATH"

INSTALL
- Past: "executed during installation on"
- Future: "to be executed"
- Example: "setup.sh : executed during provisioning on 2024-01-15"

CONFIG
- Always present tense: "found"
- Example: ".dodot.toml : dodot config file found"


Complete Display Example
------------------------

Here's a comprehensive example showing various states:

    neovim:
        config      : .dodot.toml  : dodot config file found
        symlink     : .vimrc       : linked to $HOME/.vimrc
        shell     : alias.sh     : included in zsh
        homebrew    : Brewfile     : executed on 2024-01-15
        path        : bin          : added to $PATH
        install     : *setup.sh    : to be executed

    temp:
        .dodotignore : dodot is ignoring this dir

    broken:
        symlink     : config       : failed to symlink $HOME/.config
        

Display Column Formatting
-------------------------

The three-column format uses consistent spacing:

- Column 1 (Handler): 10 characters, left-aligned
- Column 2 (File path): 15 characters, left-aligned  
- Column 3 (Status): Variable length status message

Separators between columns use " : " (space-colon-space) for readability.


Color Application
-----------------

Colors are applied selectively to maintain readability:

1. Handler names receive status-based background colors
2. File paths remain in default text color unless overridden (asterisk)
3. Status messages use appropriate text colors (muted for paths, etc.)
4. Pack headers receive alert coloring only when containing errors


Implementation Notes
--------------------

The display system is implemented as a presentation layer that:

1. Accepts structured data from command implementations
2. Applies consistent formatting rules
3. Handles terminal capability detection (color support)
4. Provides both rich (styled) and plain text renderers

The design prioritizes:
- Consistency across commands
- Clear visual hierarchy
- Scannable output format
- Accessible color choices
- Graceful degradation for non-color terminals