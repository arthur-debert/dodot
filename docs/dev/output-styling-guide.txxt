                    Output Styling Guide

This guide explains how to modify dodot's terminal output styling and templates.

Quick Overview
--------------

The output system has three main components:
1. **Templates** (`pkg/output/templates/*.tmpl`) - Define structure
2. **Styles** (`pkg/output/styles/styles.yaml`) - Define appearance  
3. **Renderer** - Combines templates + styles → terminal output

Making Changes
--------------

1. **Modify styles** - Edit `pkg/output/styles/styles.yaml`:
   ```yaml
   styles:
     PowerUp:
       foreground: secondary
       bold: true
       width: 12        # Fixed width for alignment
       align: left
   ```

2. **Modify templates** - Edit files in `pkg/output/templates/`:
   ```
   <PackHeader>{{.Name}}</PackHeader>
   {{if .Files}}{{range .Files}}{{template "file.tmpl" .}}
   {{end}}{{end}}
   ```

3. **Test your changes**:
   ```bash
   # Quick build and test
   ./scripts/build && ./sample-status.sh
   
   # Or test specific command
   ./scripts/build && ./bin/dodot status mypack
   ```

Common Tasks
------------

**Change colors:**
Edit `styles.yaml` color definitions:
```yaml
colors:
  success:
    light: "#008700"   # Light terminal
    dark: "#00FF00"    # Dark terminal
```

**Adjust spacing:**
Modify margin/padding in styles:
```yaml
  PackHeader:
    marginBottom: 1    # Space after element
    paddingLeft: 2     # Space inside element
```

**Fix column alignment:**
Set consistent widths for aligned elements:
```yaml
  PowerUp:
    width: 12
  FilePath:  
    width: 18
```

**Remove/add elements:**
Edit templates directly:
```
# Remove status badges:
{{- template "status-badge.tmpl" .Status -}}  # Delete this line

# Add separator:
<TableSeparator> : </TableSeparator>
```

Testing Workflow
----------------

1. Make changes to styles or templates
2. Run `./scripts/build` to rebuild
3. Test with `./sample-status.sh` (uses test data)
4. Or test with real data: `./bin/dodot status`

**Important:** You won't see colors in non-interactive terminals. 
The output will be plain text but spacing/alignment still applies.

Debugging
---------

- **Check template output**: Run with `-vvv` to see debug logs
- **Style not applying?**: Ensure style name matches template tag
- **Alignment broken?**: Check all related styles have width set
- **Tests failing?**: Update `pkg/output/renderer_test.go` to match new output

Template Tags
-------------

Templates use XML-like tags that map to styles:
- `<PowerUp>` → Uses PowerUp style from styles.yaml
- `<Success>` → Uses Success style  
- Custom tags → Define matching style in styles.yaml

Example: Full Change
--------------------

To change how files are displayed:

1. Edit `pkg/output/templates/file.tmpl`:
   ```
   <Indent><PowerUp>{{.PowerUp}}</PowerUp> : {{.Path}}</Indent>
   ```

2. Edit `pkg/output/styles/styles.yaml`:
   ```yaml
   PowerUp:
     foreground: blue
     bold: true
     width: 15
   ```

3. Test: `./scripts/build && ./sample-status.sh`

4. Update tests if needed: `go test ./pkg/output/...`