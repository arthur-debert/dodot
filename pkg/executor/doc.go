// Package executor provides the action execution and reversal engine for dodot.
//
// The executor is responsible for two primary operations:
//
// 1. Forward Execution (Execute):
//   - Processing Action instances generated by handlers
//   - Managing execution lifecycle and post-execution handlers
//   - Creating symlinks, running scripts, and installing packages
//
// 2. Reverse Execution (Clear):
//   - Orchestrating handler cleanup operations
//   - Removing symlinks, uninstalling packages, and cleaning state
//   - Coordinating with handlers' Clear() implementations
//
// The executor acts as the bridge between high-level commands and low-level
// operations, ensuring both installation and removal of configurations are
// handled consistently and safely.
//
// Clear Operations:
//
// Clear is the "undo" mechanism for dodot. Since arbitrary scripts cannot be
// reliably reversed, handlers implement their own Clear() methods to define
// what can be safely undone. The executor orchestrates these operations:
//
//   - Symlink handlers remove their created links
//   - Path handlers clean up PATH modifications
//   - Shell handlers remove profile entries
//   - Install handlers track but cannot undo script execution
//   - Homebrew handlers can optionally uninstall packages
//
// The executor ensures proper ordering, error handling, and state cleanup
// during both forward and reverse operations.
package executor
