name: Docker Integration Tests

# Run on demand only - not on every commit
on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Enable debug logging'
        required: false
        default: false
        type: boolean

jobs:
  docker-integration:
    name: Run Docker Integration Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Need full history for version info
          fetch-depth: 0
      
      - name: Build Docker test image
        run: |
          echo "Building Docker test image..."
          cd test-environment
          docker build -t dodot-test .
      
      - name: Run all test phases
        id: run-tests
        run: |
          echo "Running Docker integration tests..."
          cd test-environment
          
          # Run the tests and capture output
          set +e  # Don't exit on failure, we want to capture the output
          OUTPUT=$(./docker-run.sh 2>&1)
          EXIT_CODE=$?
          set -e
          
          # Save output to file for debugging
          echo "$OUTPUT" > test-output.log
          
          # Print the full output for debugging
          echo "$OUTPUT"
          
          # Extract stage statuses
          SETUP_STATUS=$(echo "$OUTPUT" | grep -E "^STAGE SETUP:" | tail -1 | cut -d' ' -f3)
          TEST_STATUS=$(echo "$OUTPUT" | grep -E "^STAGE TEST:" | tail -1 | cut -d' ' -f3)
          REPORT_STATUS=$(echo "$OUTPUT" | grep -E "^STAGE REPORT:" | tail -1 | cut -d' ' -f3)
          
          echo "=== Extracted Status ==="
          echo "Setup: $SETUP_STATUS"
          echo "Test: $TEST_STATUS"
          echo "Report: $REPORT_STATUS"
          
          # Set outputs for other steps
          echo "setup_status=$SETUP_STATUS" >> $GITHUB_OUTPUT
          echo "test_status=$TEST_STATUS" >> $GITHUB_OUTPUT
          echo "report_status=$REPORT_STATUS" >> $GITHUB_OUTPUT
          echo "exit_code=$EXIT_CODE" >> $GITHUB_OUTPUT
      
      - name: ✅ Setup Phase
        if: always()
        run: |
          SETUP_STATUS="${{ steps.run-tests.outputs.setup_status }}"
          if [ "$SETUP_STATUS" = "SUCCESS" ]; then
            echo "✅ Setup phase succeeded - dodot binary built successfully"
            exit 0
          else
            echo "❌ Setup phase failed - could not build dodot binary"
            echo "Check the logs above for build errors"
            exit 1
          fi
      
      - name: 🧪 Test Phase
        if: always()
        run: |
          TEST_STATUS="${{ steps.run-tests.outputs.test_status }}"
          if [ "$TEST_STATUS" = "SUCCESS" ]; then
            echo "✅ All tests passed"
            exit 0
          elif [ "$TEST_STATUS" = "PARTIAL" ]; then
            echo "⚠️ Some tests failed"
            echo "Check the test output above for details"
            exit 1
          elif [ "$TEST_STATUS" = "FAILURE" ]; then
            echo "❌ Test phase failed"
            echo "Check the test output above for failures"
            exit 1
          else
            echo "❓ Test status unknown: $TEST_STATUS"
            exit 1
          fi
      
      - name: 📊 Report Phase
        if: always()
        run: |
          REPORT_STATUS="${{ steps.run-tests.outputs.report_status }}"
          if [ "$REPORT_STATUS" = "SUCCESS" ]; then
            echo "✅ Report phase succeeded - test results collected"
            exit 0
          else
            echo "⚠️ Report phase had issues"
            echo "Test results may be incomplete"
            # Don't fail the workflow for reporting issues
            exit 0
          fi
      
      - name: Summary
        if: always()
        run: |
          echo "## Docker Integration Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Phase | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Setup | ${{ steps.run-tests.outputs.setup_status || 'UNKNOWN' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Test | ${{ steps.run-tests.outputs.test_status || 'UNKNOWN' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Report | ${{ steps.run-tests.outputs.report_status || 'UNKNOWN' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Success criteria:** All tests must pass (TEST_STATUS = SUCCESS)" >> $GITHUB_STEP_SUMMARY
      
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-test-results
          path: |
            test-environment/test-results/
            test-environment/test-output.log
            bin/dodot-container-linux
          retention-days: 7
          if-no-files-found: ignore